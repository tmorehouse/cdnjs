(function(){jQuery.fn.springy=function(x){var b=this.graph=x.graph||new Springy.Graph();var k="12px Verdana, sans-serif";var q="8px Verdana, sans-serif";var u=x.stiffness||400;var g=x.repulsion||400;var e=x.damping||0.5;var t=x.nodeSelected||null;var f=this[0];var o=f.getContext("2d");var v=this.layout=new Springy.Layout.ForceDirected(b,u,g,e);var c=v.getBoundingBox();var j={bottomleft:new Springy.Vector(-2,-2),topright:new Springy.Vector(2,2)};Springy.requestAnimationFrame(function p(){j=v.getBoundingBox();c={bottomleft:c.bottomleft.add(j.bottomleft.subtract(c.bottomleft).divide(10)),topright:c.topright.add(j.topright.subtract(c.topright).divide(10))};Springy.requestAnimationFrame(p)});var s=function(A){var z=c.topright.subtract(c.bottomleft);var C=A.subtract(c.bottomleft).divide(z.x).x*f.width;var B=A.subtract(c.bottomleft).divide(z.y).y*f.height;return new Springy.Vector(C,B)};var a=function(C){var B=c.topright.subtract(c.bottomleft);var A=(C.x/f.width)*B.x+c.bottomleft.x;var z=(C.y/f.height)*B.y+c.bottomleft.y;return new Springy.Vector(A,z)};var m=null;var d=null;var i=null;jQuery(f).mousedown(function(A){var B=jQuery(this).offset();var z=a({x:A.pageX-B.left,y:A.pageY-B.top});m=d=i=v.nearest(z);if(m.node!==null){i.point.m=10000;if(t){t(m.node)}}n.start()});jQuery(f).dblclick(function(A){var B=jQuery(this).offset();var z=a({x:A.pageX-B.left,y:A.pageY-B.top});m=v.nearest(z);node=m.node;if(node&&node.data&&node.data.ondoubleclick){node.data.ondoubleclick()}});jQuery(f).mousemove(function(A){var B=jQuery(this).offset();var z=a({x:A.pageX-B.left,y:A.pageY-B.top});d=v.nearest(z);if(i!==null&&i.node!==null){i.point.p.x=z.x;i.point.p.y=z.y}n.start()});jQuery(window).bind("mouseup",function(z){i=null});Springy.Node.prototype.getWidth=function(){var A=(this.data.label!==undefined)?this.data.label:this.id;if(this._width&&this._width[A]){return this._width[A]}o.save();o.font=(this.data.font!==undefined)?this.data.font:k;var z=o.measureText(A).width+10;o.restore();this._width||(this._width={});this._width[A]=z;return z};Springy.Node.prototype.getHeight=function(){return 20};var n=this.renderer=new Springy.Renderer(v,function l(){o.clearRect(0,0,f.width,f.height)},function h(I,B,z){var W=s(B).x;var F=s(B).y;var U=s(z).x;var E=s(z).y;var X=new Springy.Vector(U-W,E-F);var Y=X.normal().normalise();var Q=b.getEdges(I.source,I.target);var D=b.getEdges(I.target,I.source);var Z=Q.length+D.length;var P=0;for(var T=0;T<Q.length;T++){if(Q[T].id===I.id){P=T}}var G=6;var H=Y.multiply(-((Z-1)*G)/2+(P*G));var C=s(B).add(H);var A=s(z).add(H);var M=I.target.getWidth();var J=I.target.getHeight();var L=w(C,A,{x:U-M/2,y:E-J/2},M,J);if(!L){L=A}var K=(I.data.color!==undefined)?I.data.color:"#000000";var V;var O;var N=(I.data.weight!==undefined)?I.data.weight:1;o.lineWidth=Math.max(N*2,0.1);V=1+o.lineWidth;O=8;var R=(I.data.directional!==undefined)?I.data.directional:true;var S;if(R){S=L.subtract(X.normalise().multiply(O*0.5))}else{S=A}o.strokeStyle=K;o.beginPath();o.moveTo(C.x,C.y);o.lineTo(S.x,S.y);o.stroke();if(R){o.save();o.fillStyle=K;o.translate(L.x,L.y);o.rotate(Math.atan2(E-F,U-W));o.beginPath();o.moveTo(-O,V);o.lineTo(0,0);o.lineTo(-O,-V);o.lineTo(-O*0.8,-0);o.closePath();o.fill();o.restore()}if(I.data.label!==undefined){text=I.data.label;o.save();o.textAlign="center";o.textBaseline="top";o.font=(I.data.font!==undefined)?I.data.font:q;o.fillStyle="#5BA6EC";o.fillText(text,(W+U)/2,(F+E)/2);o.restore()}},function r(B,C){var z=s(C);o.save();var A=B.getWidth();var E=B.getHeight();o.clearRect(z.x-A/2,z.y-10,A,20);if(m!==null&&m.node!==null&&m.node.id===B.id){o.fillStyle="#FFFFE0"}else{if(d!==null&&d.node!==null&&d.node.id===B.id){o.fillStyle="#EEEEEE"}else{o.fillStyle="#FFFFFF"}}o.fillRect(z.x-A/2,z.y-10,A,20);o.textAlign="left";o.textBaseline="top";o.font=(B.data.font!==undefined)?B.data.font:k;o.fillStyle="#000000";o.font="16px Verdana, sans-serif";var D=(B.data.label!==undefined)?B.data.label:B.id;o.fillText(D,z.x-A/2+5,z.y-8);o.restore()});n.start();function y(F,E,D,C){var z=((C.y-D.y)*(E.x-F.x)-(C.x-D.x)*(E.y-F.y));if(z===0){return false}var B=((C.x-D.x)*(F.y-D.y)-(C.y-D.y)*(F.x-D.x))/z;var A=((E.x-F.x)*(F.y-D.y)-(E.y-F.y)*(F.x-D.x))/z;if(B<0||B>1||A<0||A>1){return false}return new Springy.Vector(F.x+B*(E.x-F.x),F.y+B*(E.y-F.y))}function w(F,E,C,D,A){var H={x:C.x,y:C.y};var B={x:C.x+D,y:C.y};var z={x:C.x,y:C.y+A};var G={x:C.x+D,y:C.y+A};var I;if(I=y(F,E,H,B)){return I}if(I=y(F,E,B,G)){return I}if(I=y(F,E,G,z)){return I}if(I=y(F,E,z,H)){return I}return false}return this}})();