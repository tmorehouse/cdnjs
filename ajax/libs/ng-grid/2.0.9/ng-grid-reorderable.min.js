function ngGridReorderable(){var self=this;self.$scope=null;self.myGrid=null;self.init=function(scope,grid,services){self.$scope=scope;self.myGrid=grid;self.services=services;self.assignEvents()};self.colToMove=undefined;self.groupToMove=undefined;self.assignEvents=function(){self.myGrid.$viewport.on("mousedown",self.onRowMouseDown).on("dragover",self.dragOver).on("drop",self.onRowDrop)};self.onRowMouseDown=function(event){var targetRow=$(event.target).closest(".ngRow");var rowScope=angular.element(targetRow).scope();if(rowScope){targetRow.attr("draggable","true");self.services.DomUtilityService.eventStorage.rowToMove={targetRow:targetRow,scope:rowScope}}};self.onRowDrop=function(event){var targetRow=$(event.target).closest(".ngRow");var rowScope=angular.element(targetRow).scope();if(rowScope){var prevRow=self.services.DomUtilityService.eventStorage.rowToMove;if(prevRow.scope.row===rowScope.row){return}self.changeRowOrder(prevRow.scope.row,rowScope.row);grid.searchProvider.evalFilter();self.services.DomUtilityService.eventStorage.rowToMove=undefined;self.services.DomUtilityService.digest(rowScope.$root)}};self.changeRowOrder=function(prevRow,targetRow){var i=self.rowCache.indexOf(prevRow);var j=self.rowCache.indexOf(targetRow);self.myGrid.rowCache.splice(i,1);self.myGrid.rowCache.splice(j,0,prevRow);self.$scope.$emit("ngGridEventChangeOrder",self.rowCache)};self.dragOver=function(evt){evt.preventDefault()}}