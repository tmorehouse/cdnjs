!function(){function e(){return"string"==typeof n.methodology?t[n.methodology]:n.methodology}var t={suit:{modifier:/^([A-Z][a-zA-Z]*(?:\-[a-zA-Z]+)?)\-\-[a-zA-Z]+$/,element:/^([A-Z][a-zA-Z]*)\-[a-zA-Z]+$/},inuit:{modifier:/^((?:[a-z]+\-)*[a-z]+(?:__(?:[a-z]+\-)*[a-z]+)?)\-\-(?:[a-z]+\-)*[a-z]+$/,element:/^((?:[a-z]+\-)*[a-z]+)__(?:[a-z]+\-)*[a-z]+$/},yandex:{modifier:/^((?:[a-z]+\-)*[a-z]+(?:__(?:[a-z]+\-)*[a-z]+)?)_(?:[a-z]+_)*[a-z]+$/,element:/^((?:[a-z]+\-)*[a-z]+)__(?:[a-z]+\-)*[a-z]+$/}},n={methodology:"suit",getBlockName:function(t){var n,i=e();return i.modifier.test(t)?n=RegExp.$1:i.element.test(t)?n=RegExp.$1:n||!1},isElement:function(t){return e().element.test(t)},isModifier:function(t){return e().modifier.test(t)}};HTMLInspector.rules.add("bem-conventions",n,function(e,t,n){var i=this.utils.parents,o=this.utils.matches;e.on("class",function(e){if(n.isElement(e)){var a=i(this).some(function(t){return o(t,"."+n.getBlockName(e))});a||t.warn("bem-conventions","The BEM element '"+e+"' must be a descendent of '"+n.getBlockName(e)+"'.",this)}n.isModifier(e)&&(o(this,"."+n.getBlockName(e))||t.warn("bem-conventions","The BEM modifier class '"+e+"' was found without the unmodified class '"+n.getBlockName(e)+"'.",this))})})}();