function JSONCov(s,e){var o=this,e=1==arguments.length?!0:e;Base.call(this,s);var t=[],a=[],i=[];s.on("test end",function(s){t.push(s)}),s.on("pass",function(s){i.push(s)}),s.on("fail",function(s){a.push(s)}),s.on("end",function(){var s=global._$jscoverage||{},n=o.cov=map(s);n.stats=o.stats,n.tests=t.map(clean),n.failures=a.map(clean),n.passes=i.map(clean),e&&process.stdout.write(JSON.stringify(n,null,2))})}function map(s){var e={instrumentation:"node-jscoverage",sloc:0,hits:0,misses:0,coverage:0,files:[]};for(var o in s){var t=coverage(o,s[o]);e.files.push(t),e.hits+=t.hits,e.misses+=t.misses,e.sloc+=t.sloc}return e.sloc>0&&(e.coverage=e.hits/e.sloc*100),e}function coverage(s,e){var o={filename:s,coverage:0,hits:0,misses:0,sloc:0,source:{}};return e.source.forEach(function(s,t){t++,0===e[t]?(o.misses++,o.sloc++):void 0!==e[t]&&(o.hits++,o.sloc++),o.source[t]={source:s,coverage:void 0===e[t]?"":e[t]}}),o.coverage=o.hits/o.sloc*100,o}function clean(s){return{title:s.title,fullTitle:s.fullTitle(),duration:s.duration}}var Base=require("./base");exports=module.exports=JSONCov;