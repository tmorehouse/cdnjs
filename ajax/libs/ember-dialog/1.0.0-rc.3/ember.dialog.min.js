/** Copyright Wheely Inc. 2014 **/
define("ember-dialog/app",["ember-dialog/initializers/dialog-manager","exports"],function(__dependency1__,__exports__){"use strict";var DialogManagerInitializer=__dependency1__["default"];var App=Ember.Application.extend();App.initializer(DialogManagerInitializer);__exports__["default"]=App});define("ember-dialog/initializers/dialog-manager",["ember-dialog/services/dialog-manager","ember-dialog/components/dialog","exports"],function(__dependency1__,__dependency2__,__exports__){"use strict";var DialogManager=__dependency1__["default"];var DialogComponent=__dependency2__["default"];var initialize=function(container,application){application.register("component:dialog",DialogComponent);application.register("dialog:manager",DialogManager,{singleton:true});application.inject("controller","dialogManager","dialog:manager");application.inject("component:dialog","dialogManager","dialog:manager")};__exports__["default"]={name:"dialog-manager",initialize:initialize}});define("ember-dialog/services/dialog-manager",["exports"],function(__exports__){"use strict";__exports__["default"]=Ember.Object.extend(Ember.Evented,{rootElement:"body",defaults:{ms:5e3},dialogData:{acceptLabel:"yes",declineLabel:"no",substrate:false,title:"",className:""},active:function(){return this.get("dialogsList").slice(-1).pop()}.property("dialogsList"),dialogsList:[],_dialogs:Ember.Object.create(),alert:function(view,controller,dialogData){dialogData=Ember.typeOf(dialogData)==="object"?dialogData:{};var className=dialogData.className||"";dialogData=Ember.$.extend({},this.get("dialogData"),dialogData,{className:["alert",className].join(" ")});return this._openWithLayout("dialogs/alert",view,controller,dialogData)},confirm:function(view,controller,dialogData){dialogData=Ember.typeOf(dialogData)==="object"?dialogData:{};var className=dialogData.className||"";dialogData=Ember.$.extend({},this.get("dialogData"),dialogData,{className:["confirm",className].join(" ")});return this._openWithLayout("dialogs/confirm",view,controller,dialogData)},custom:function(view,controller,dialogData){dialogData=Ember.typeOf(dialogData)==="object"?dialogData:{};var className=dialogData.className||"";dialogData=Ember.$.extend({},this.get("dialogData"),dialogData,{className:["custom",className].join(" ")});return this._openWithLayout("dialogs/custom",view,controller,dialogData)},notice:function(view,ms,dialogData){var name=this._generateDialogName();dialogData=Ember.typeOf(dialogData)==="object"?dialogData:{};var className=dialogData.className||"";dialogData=Ember.$.extend({name:name},this.get("dialogData"),dialogData,{className:["notice","highest",className].join(" "),substrate:false});var promise=this._openWithLayout("dialogs/notice",view,null,dialogData,false),bind=Ember.run.bind;this.getDialog(name).reopen({click:function(){this.close()}});if(Ember.typeOf(ms)!=="null"&&ms!==Infinity){ms=ms>>0||this.get("defaults.ms");return new Ember.RSVP.Promise(bind(this,function(resolve,reject){setTimeout(bind(this,function(){this.close(name).then(resolve,reject)}),ms)}))}else{return promise}},open:function(name,view,controller,dialogData,setActive){var container=controller.container||this.container,dialog=this.getDialog(name),rootElement=controller.namespace&&controller.namespace.rootElement||this.get("rootElement"),template,data={name:name};Ember.merge(data,dialogData||{});Ember.Logger.log("%cDialogManager:%c Opening dialog named %s","font-weight: 900;",null,name);if(Ember.typeOf(dialog)==="undefined"){Ember.Logger.log("%cDialogManager:%c Creating dialog named %s","font-weight: 900;",null,name);dialog=container.lookupFactory("component:dialog").createWithMixins(data);this.setDialog(name,dialog);if(Ember.typeOf(view)==="string"){view=this._getView(view,controller);dialog.set("body",view)}else if(Ember.typeOf(view)==="class"){dialog.setProperties({body:view})}else{throw new Ember.Error("The given view unrecognized")}dialog.appendTo(rootElement)}setActive&&this.get("dialogsList").push(name);return dialog.show()},close:function(name){this.get("controllers:"+name).reopen({target:this.get("targets:"+name)});return new Ember.RSVP.Promise(Ember.run.bind(this,function(resolve,reject){var dialogsList=this.get("dialogsList");this.set("dialogsList",dialogsList.without(name));var dialog=this.getDialog(name);Ember.Logger.log("%cDialogManager:%c Closing dialog named %s","font-weight: 900;",null,name);dialog.hide();resolve(dialog)}))},getDialog:function(name){return this.get("_dialogs").get(name)},setDialog:function(name,instance){Ember.Logger.log("%cDialogManager:%c Register dialog named %s","font-weight: 900;",null,name);return this.get("_dialogs").set(name,instance)},_generateDialogName:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=="x"?r:r&3|8;return v.toString(16)})},_destroyModel:function(name){var dialog=Ember.typeOf(name)==="string"?this.getDialog(name):name;if(dialog){dialog.destroy()}return this},_getView:function(view,controller){var template="",container=controller.container||this.container;if(Ember.typeOf(view)==="string"){template=container.lookup("template:"+view);template=template||Ember.Handlebars.compile(view);view=Ember.View.extend({template:template,controller:controller})}else if(Ember.typeOf(view)==="class"){view=Ember.copy(view)}else{throw new Ember.Error("The given view unrecognized. Should be name of template                                        or view instance.")}return view},_openWithLayout:function(layoutName,view,controller,dialogData,setActive){var dialog,promise,name=Ember.typeOf(dialogData.name)==="string"?dialogData.name:this._generateDialogName();controller=controller||Ember.Controller.create();view=this._getView(view,controller);dialogData=dialogData||{};setActive=Ember.typeOf(setActive)==="undefined"?true:setActive;view.reopen({layoutName:layoutName});dialog=this.open(name,view,controller,dialogData,setActive);this.set("controllers:"+name,controller);this.set("targets:"+name,controller.target);controller.reopen({target:dialog});promise=new Ember.RSVP.Promise(function(resolve,reject){dialog.reopen({resolved:resolve,rejected:reject})});return promise}})});define("ember-dialog/components/dialog",["ember-dialog/utils/highest-zindex","exports"],function(__dependency1__,__exports__){"use strict";var maxZIndex=__dependency1__["default"];__exports__["default"]=Ember.Component.extend({layoutName:"components/dialog",isVisible:false,isActive:function(){return this.get("name")===this.get("dialogManager.active")}.property("name","dialogManager.active"),_visibleDidChange:function(){if(!this.get("isVisible")){return}Ember.run.later(this,function(){var zindex=maxZIndex(),dialog=this.$(".dialog-dialog");dialog.css({"z-index":zindex+1});var firstInput=this.$("input:visible:first");if(firstInput.size()){firstInput.focus()}},0)}.observes("isVisible"),show:function(){return this.set("isVisible",true)},hide:function(){this.set("isVisible",false)},close:function(){return this.get("dialogManager").close(this.get("name"))},decline:function(){Ember.Logger.log("✘ %cDecline action%c: "+this.get("name"),"font-weight: 900; color: #900;",null);if(this.has("rejected")){var callback=this.get("rejected");this.get("rejected").call(this,this)}this.close();return this},accept:function(){Ember.Logger.log("✓ %cConfirm action%c "+this.get("name"),"font-weight: 900; color: #070;",null);if(this.has("resolved")){var callback=this.get("resolved");this.get("resolved").call(this,this)}this.close();return this},keyDown:function(e){if(e.keyCode===27&&this.get("isActive")){this.decline();return false}},actions:{decline:function(dialog){this.decline()},accept:function(dialog){this.accept()}}})});define("ember-dialog/utils/highest-zindex",["exports"],function(__exports__){"use strict";__exports__["default"]=function(){var $=Ember.$;var max=Math.max.apply(null,$.map($(":visible:not(.highest)"),function(element){if($(element).css("position")==="absolute"||$(element).css("position")==="relative")return parseInt($(element).css("z-index"))||1}));return max}});
Ember.TEMPLATES["dialogs/alert"]=Ember.Handlebars.compile('<div class="dialog-header">    <button type="button" class="close" {{action "accept" target}}>×</button>    <div class="dialog-title">{{ target.title }}</div></div><div class="dialog-body">    {{yield}}</div><div class="dialog-footer">    <button class="btn btn-default" type="button" {{action "accept" target}}>{{target.acceptLabel}}</button></div>');Ember.TEMPLATES["dialogs/confirm"]=Ember.Handlebars.compile('<div class="dialog-header">    <button type="button" class="close" {{action "decline" target}}>×</button>    <div class="dialog-title">{{ target.title }}</div></div><div class="dialog-body">    {{yield}}</div><div class="dialog-footer">    <button class="btn btn-primary" type="button" {{action "accept" target}}>{{target.acceptLabel}}</button>    <button class="btn btn-default" type="button" {{action "decline" target}}>{{target.declineLabel}}</button></div>');Ember.TEMPLATES["dialogs/custom"]=Ember.Handlebars.compile("{{yield}}");Ember.TEMPLATES["dialogs/notice"]=Ember.Handlebars.compile('<div class="dialog-body">    {{yield}}</div>');Ember.TEMPLATES["components/dialog"]=Ember.Handlebars.compile('<div {{bind-attr class=":dialog-dialog :component-dialog-dialog className substrate"}}>    <div class="dialog-content">        {{view body}}    </div></div>');
Ember.onLoad("Ember.Application",function(Application){var initializer=require("ember-dialog/initializers/dialog-manager")["default"];Application.initializer(initializer)});