(function(t){Ember.libraries.register("Ember Simple Auth","0.7.3");var e,i;(function(){var t={},n={};e=function(e,i,n){t[e]={deps:i,callback:n}};i=function(e){if(n.hasOwnProperty(e)){return n[e]}n[e]={};if(!t[e]){throw new Error("Could not find module "+e)}var r=t[e],a=r.deps,o=r.callback,s=[],u;for(var l=0,c=a.length;l<c;l++){if(a[l]==="exports"){s.push(u={})}else{s.push(i(h(a[l])))}}var f=o.apply(this,s);return n[e]=u||f;function h(t){if(t.charAt(0)!=="."){return t}var i=t.split("/");var n=e.split("/").slice(0,-1);for(var r=0,a=i.length;r<a;r++){var o=i[r];if(o===".."){n.pop()}else if(o==="."){continue}else{n.push(o)}}return n.join("/")}};i.registry=t})();e("simple-auth/authenticators/base",["exports"],function(t){"use strict";t["default"]=Ember.Object.extend(Ember.Evented,{restore:function(t){return Ember.RSVP.reject()},authenticate:function(t){return Ember.RSVP.reject()},invalidate:function(t){return Ember.RSVP.resolve()}})});e("simple-auth/authorizers/base",["exports"],function(t){"use strict";t["default"]=Ember.Object.extend({session:null,authorize:function(t,e){}})});e("simple-auth/configuration",["simple-auth/utils/load-config","exports"],function(t,e){"use strict";var i=t["default"];var n={authenticationRoute:"login",routeAfterAuthentication:"index",routeIfAlreadyAuthenticated:"index",sessionPropertyName:"session",authorizer:null,session:"simple-auth-session:main",store:"simple-auth-session-store:local-storage",localStorageKey:"ember_simple_auth:session",crossOriginWhitelist:[],applicationRootUrl:null};e["default"]={authenticationRoute:n.authenticationRoute,routeAfterAuthentication:n.routeAfterAuthentication,routeIfAlreadyAuthenticated:n.routeIfAlreadyAuthenticated,sessionPropertyName:n.sessionPropertyName,authorizer:n.authorizer,session:n.session,store:n.store,localStorageKey:n.localStorageKey,crossOriginWhitelist:n.crossOriginWhitelist,applicationRootUrl:n.applicationRootUrl,load:i(n,function(t,e){this.applicationRootUrl=t.lookup("router:main").get("rootURL")||"/"})}});e("simple-auth/ember",["./initializer"],function(t){"use strict";var e=t["default"];Ember.onLoad("Ember.Application",function(t){t.initializer(e)})});e("simple-auth/initializer",["./configuration","./utils/get-global-config","./setup","exports"],function(t,e,i,n){"use strict";var r=t["default"];var a=e["default"];var o=i["default"];n["default"]={name:"simple-auth",initialize:function(t,e){var i=a("simple-auth");r.load(t,i);o(t,e)}}});e("simple-auth/mixins/application-route-mixin",["./../configuration","exports"],function(t,e){"use strict";var i=t["default"];var n=false;e["default"]=Ember.Mixin.create({activate:function(){n=true;this._super()},beforeModel:function(t){this._super(t);if(!this.get("_authEventListenersAssigned")){this.set("_authEventListenersAssigned",true);var e=this;Ember.A(["sessionAuthenticationSucceeded","sessionAuthenticationFailed","sessionInvalidationSucceeded","sessionInvalidationFailed","authorizationFailed"]).forEach(function(r){e.get(i.sessionPropertyName).on(r,function(i){Array.prototype.unshift.call(arguments,r);var a=n?e:t;a.send.apply(a,arguments)})})}},actions:{authenticateSession:function(){this.transitionTo(i.authenticationRoute)},sessionAuthenticationSucceeded:function(){var t=this.get(i.sessionPropertyName).get("attemptedTransition");if(t){t.retry();this.get(i.sessionPropertyName).set("attemptedTransition",null)}else{this.transitionTo(i.routeAfterAuthentication)}},sessionAuthenticationFailed:function(t){},invalidateSession:function(){this.get(i.sessionPropertyName).invalidate()},sessionInvalidationSucceeded:function(){if(!Ember.testing){window.location.replace(i.applicationRootUrl)}},sessionInvalidationFailed:function(t){},authorizationFailed:function(){if(this.get(i.sessionPropertyName).get("isAuthenticated")){this.get(i.sessionPropertyName).invalidate()}}}})});e("simple-auth/mixins/authenticated-route-mixin",["./../configuration","exports"],function(t,e){"use strict";var i=t["default"];e["default"]=Ember.Mixin.create({beforeModel:function(t){this._super(t);if(!this.get(i.sessionPropertyName).get("isAuthenticated")){t.abort();this.get(i.sessionPropertyName).set("attemptedTransition",t);Ember.assert("The route configured as Configuration.authenticationRoute cannot implement the AuthenticatedRouteMixin mixin as that leads to an infinite transitioning loop.",this.get("routeName")!==i.authenticationRoute);t.send("authenticateSession")}}})});e("simple-auth/mixins/authentication-controller-mixin",["./../configuration","exports"],function(t,e){"use strict";var i=t["default"];e["default"]=Ember.Mixin.create({authenticator:null,actions:{authenticate:function(t){var e=this.get("authenticator");Ember.assert("AuthenticationControllerMixin/LoginControllerMixin require the authenticator property to be set on the controller",!Ember.isEmpty(e));return this.get(i.sessionPropertyName).authenticate(e,t)}}})});e("simple-auth/mixins/login-controller-mixin",["./../configuration","./authentication-controller-mixin","exports"],function(t,e,i){"use strict";var n=t["default"];var r=e["default"];i["default"]=Ember.Mixin.create(r,{actions:{authenticate:function(){var t=this.getProperties("identification","password");this.set("password",null);return this._super(t)}}})});e("simple-auth/mixins/unauthenticated-route-mixin",["./../configuration","exports"],function(t,e){"use strict";var i=t["default"];e["default"]=Ember.Mixin.create({beforeModel:function(t){if(this.get(i.sessionPropertyName).get("isAuthenticated")){t.abort();Ember.assert("The route configured as Configuration.routeIfAlreadyAuthenticated cannot implement the UnauthenticatedRouteMixin mixin as that leads to an infinite transitioning loop.",this.get("routeName")!==i.routeIfAlreadyAuthenticated);this.transitionTo(i.routeIfAlreadyAuthenticated)}}})});e("simple-auth/session",["exports"],function(t){"use strict";t["default"]=Ember.ObjectProxy.extend(Ember.Evented,{authenticator:null,store:null,container:null,isAuthenticated:false,attemptedTransition:null,content:{},authenticate:function(){var t=Array.prototype.slice.call(arguments);var e=t.shift();Ember.assert("Session#authenticate requires the authenticator factory to be specified, was "+e,!Ember.isEmpty(e));var i=this;var n=this.container.lookup(e);Ember.assert('No authenticator for factory "'+e+'" could be found',!Ember.isNone(n));return new Ember.RSVP.Promise(function(r,a){n.authenticate.apply(n,t).then(function(t){i.setup(e,t,true);r()},function(t){i.clear();i.trigger("sessionAuthenticationFailed",t);a(t)})})},invalidate:function(){Ember.assert("Session#invalidate requires the session to be authenticated",this.get("isAuthenticated"));var t=this;return new Ember.RSVP.Promise(function(e,i){var n=t.container.lookup(t.authenticator);n.invalidate(t.content).then(function(){n.off("sessionDataUpdated");t.clear(true);e()},function(e){t.trigger("sessionInvalidationFailed",e);i(e)})})},restore:function(){var t=this;return new Ember.RSVP.Promise(function(e,i){var n=t.store.restore();var r=n.authenticator;if(!!r){delete n.authenticator;t.container.lookup(r).restore(n).then(function(i){t.setup(r,i);e()},function(){t.store.clear();i()})}else{t.store.clear();i()}})},setup:function(t,e,i){e=Ember.merge(Ember.merge({},this.content),e);i=!!i&&!this.get("isAuthenticated");this.beginPropertyChanges();this.setProperties({isAuthenticated:true,authenticator:t,content:e});this.bindToAuthenticatorEvents();this.updateStore();this.endPropertyChanges();if(i){this.trigger("sessionAuthenticationSucceeded")}},clear:function(t){t=!!t&&this.get("isAuthenticated");this.beginPropertyChanges();this.setProperties({isAuthenticated:false,authenticator:null,content:{}});this.store.clear();this.endPropertyChanges();if(t){this.trigger("sessionInvalidationSucceeded")}},setUnknownProperty:function(t,e){var i=this._super(t,e);this.updateStore();return i},updateStore:function(){var t=this.content;if(!Ember.isEmpty(this.authenticator)){t=Ember.merge({authenticator:this.authenticator},t)}if(!Ember.isEmpty(t)){this.store.persist(t)}},bindToAuthenticatorEvents:function(){var t=this;var e=this.container.lookup(this.authenticator);e.off("sessionDataUpdated");e.off("sessionDataInvalidated");e.on("sessionDataUpdated",function(e){t.setup(t.authenticator,e)});e.on("sessionDataInvalidated",function(e){t.clear(true)})},bindToStoreEvents:function(){var t=this;this.store.on("sessionDataUpdated",function(e){var i=e.authenticator;if(!!i){delete e.authenticator;t.container.lookup(i).restore(e).then(function(e){t.setup(i,e,true)},function(){t.clear(true)})}else{t.clear(true)}})}.observes("store")})});e("simple-auth/setup",["./configuration","./session","./stores/local-storage","./stores/ephemeral","exports"],function(t,e,i,n,r){"use strict";var a=t["default"];var o=e["default"];var s=i["default"];var u=n["default"];var l="_wildcard_token_";function c(t){if(t==="*"){return t}t=t.replace("*",l);if(Ember.typeOf(t)==="string"){var e=document.createElement("a");e.href=t;e.href=e.href;t=e}var i=t.port;if(Ember.isEmpty(i)){i=t.protocol==="http:"?"80":t.protocol==="https:"?"443":""}return t.protocol+"//"+t.hostname+(i!==""?":"+i:"")}function f(t){return function(e){if(e.indexOf(l)>-1){var i=new RegExp(e.replace(l,".+"));return t.match(i)}return e.indexOf(t)>-1}}var h={};var d;function p(t){if(t.crossDomain===false||d.indexOf("*")>-1){return true}var e=h[t.url]=h[t.url]||c(t.url);return Ember.A(d).any(f(e))}function m(t){t.register("simple-auth-session-store:local-storage",s);t.register("simple-auth-session-store:ephemeral",u);t.register("simple-auth-session:main",o)}function g(t,e,i){if(p(t)){i.__simple_auth_authorized__=true;g.authorizer.authorize(i,t)}}function v(t,e,i,n){if(!!e.__simple_auth_authorized__&&e.status===401){v.session.trigger("authorizationFailed")}}var b=false;r["default"]=function(t,e){e.deferReadiness();m(t);var i=t.lookup(a.store);var n=t.lookup(a.session);n.setProperties({store:i,container:t});Ember.A(["controller","route","component"]).forEach(function(e){t.injection(e,a.sessionPropertyName,a.session)});d=Ember.A(a.crossOriginWhitelist).map(function(t){return c(t)});if(!Ember.isEmpty(a.authorizer)){var r=t.lookup(a.authorizer);Ember.assert('The configured authorizer "'+a.authorizer+'" could not be found in the container.',!Ember.isEmpty(r));r.set("session",n);g.authorizer=r;v.session=n;if(!b){Ember.$.ajaxPrefilter("+*",g);Ember.$(document).ajaxError(v);b=true}}else{Ember.Logger.info("No authorizer was configured for Ember Simple Auth - specify one if backend requests need to be authorized.")}var o=function(){e.advanceReadiness()};n.restore().then(o,o)}});e("simple-auth/stores/base",["../utils/objects-are-equal","exports"],function(t,e){"use strict";var i=t["default"];e["default"]=Ember.Object.extend(Ember.Evented,{persist:function(t){},restore:function(){return{}},clear:function(){}})});e("simple-auth/stores/ephemeral",["./base","exports"],function(t,e){"use strict";var i=t["default"];e["default"]=i.extend({init:function(){this.clear()},persist:function(t){this._data=JSON.stringify(t||{})},restore:function(){return JSON.parse(this._data)||{}},clear:function(){delete this._data;this._data="{}"}})});e("simple-auth/stores/local-storage",["./base","../utils/objects-are-equal","../configuration","exports"],function(t,e,i,n){"use strict";var r=t["default"];var a=e["default"];var o=i["default"];n["default"]=r.extend({key:"ember_simple_auth:session",init:function(){this.key=o.localStorageKey;this.bindToStorageEvents()},persist:function(t){t=JSON.stringify(t||{});localStorage.setItem(this.key,t);this._lastData=this.restore()},restore:function(){var t=localStorage.getItem(this.key);return JSON.parse(t)||{}},clear:function(){localStorage.removeItem(this.key);this._lastData={}},bindToStorageEvents:function(){var t=this;Ember.$(window).bind("storage",function(e){var i=t.restore();if(!a(i,t._lastData)){t._lastData=i;t.trigger("sessionDataUpdated",i)}})}})});e("simple-auth/utils/get-global-config",["exports"],function(t){"use strict";var e=typeof window!=="undefined"?window:{};t["default"]=function(t){return Ember.get(e,"ENV."+t)||{}}});e("simple-auth/utils/load-config",["exports"],function(t){"use strict";t["default"]=function(t,e){return function(i,n){var r=Ember.Object.create(n);for(var a in this){if(this.hasOwnProperty(a)&&Ember.typeOf(this[a])!=="function"){this[a]=r.getWithDefault(a,t[a])}}if(e){e.apply(this,[i,n])}}}});e("simple-auth/utils/objects-are-equal",["exports"],function(t){"use strict";function e(t,i){if(t===i){return true}if(!(t instanceof Object)||!(i instanceof Object)){return false}if(t.constructor!==i.constructor){return false}for(var n in t){if(!t.hasOwnProperty(n)){continue}if(!i.hasOwnProperty(n)){return false}if(t[n]===i[n]){continue}if(Ember.typeOf(t[n])!=="object"){return false}if(!e(t[n],i[n])){return false}}for(n in i){if(i.hasOwnProperty(n)&&!t.hasOwnProperty(n)){return false}}return true}t["default"]=e});var n=i("simple-auth/initializer")["default"];var r=i("simple-auth/configuration")["default"];var a=i("simple-auth/session")["default"];var o=i("simple-auth/authenticators/base")["default"];var s=i("simple-auth/authorizers/base")["default"];var u=i("simple-auth/stores/base")["default"];var l=i("simple-auth/stores/local-storage")["default"];var c=i("simple-auth/stores/ephemeral")["default"];var f=i("simple-auth/utils/objects-are-equal")["default"];var h=i("simple-auth/utils/get-global-config")["default"];var d=i("simple-auth/utils/load-config")["default"];var p=i("simple-auth/mixins/application-route-mixin")["default"];var m=i("simple-auth/mixins/authenticated-route-mixin")["default"];var g=i("simple-auth/mixins/authentication-controller-mixin")["default"];var v=i("simple-auth/mixins/login-controller-mixin")["default"];var b=i("simple-auth/mixins/unauthenticated-route-mixin")["default"];t.SimpleAuth={Configuration:r,Session:a,Authenticators:{Base:o},Authorizers:{Base:s},Stores:{Base:u,LocalStorage:l,Ephemeral:c},Utils:{objectsAreEqual:f,getGlobalConfig:h,loadConfig:d},ApplicationRouteMixin:p,AuthenticatedRouteMixin:m,AuthenticationControllerMixin:g,LoginControllerMixin:v,UnauthenticatedRouteMixin:b};i("simple-auth/ember")})(typeof global!=="undefined"?global:window);