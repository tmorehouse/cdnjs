!function(t){var e=t.define,i=t.require,n=t.Ember;"undefined"==typeof n&&"undefined"!=typeof i&&(n=i("ember")),n.libraries.register("Ember Simple Auth","0.7.2"),e("simple-auth/authenticators/base",["exports"],function(t){"use strict";t["default"]=n.Object.extend(n.Evented,{restore:function(){return new n.RSVP.reject},authenticate:function(){return new n.RSVP.reject},invalidate:function(){return new n.RSVP.resolve}})}),e("simple-auth/authorizers/base",["exports"],function(t){"use strict";t["default"]=n.Object.extend({session:null,authorize:function(){}})}),e("simple-auth/configuration",["simple-auth/utils/load-config","exports"],function(t,e){"use strict";var i=t["default"],n={authenticationRoute:"login",routeAfterAuthentication:"index",routeIfAlreadyAuthenticated:"index",sessionPropertyName:"session",authorizer:null,session:"simple-auth-session:main",store:"simple-auth-session-store:local-storage",localStorageKey:"ember_simple_auth:session",crossOriginWhitelist:[],applicationRootUrl:null};e["default"]={authenticationRoute:n.authenticationRoute,routeAfterAuthentication:n.routeAfterAuthentication,routeIfAlreadyAuthenticated:n.routeIfAlreadyAuthenticated,sessionPropertyName:n.sessionPropertyName,authorizer:n.authorizer,session:n.session,store:n.store,localStorageKey:n.localStorageKey,crossOriginWhitelist:n.crossOriginWhitelist,applicationRootUrl:n.applicationRootUrl,load:i(n,function(t){this.applicationRootUrl=t.lookup("router:main").get("rootURL")||"/"})}}),e("simple-auth/ember",["./initializer"],function(t){"use strict";var e=t["default"];n.onLoad("Ember.Application",function(t){t.initializer(e)})}),e("simple-auth/initializer",["./configuration","./utils/get-global-config","./setup","exports"],function(t,e,i,n){"use strict";var o=t["default"],s=e["default"],r=i["default"];n["default"]={name:"simple-auth",initialize:function(t,e){var i=s("simple-auth");o.load(t,i),r(t,e)}}}),e("simple-auth/mixins/application-route-mixin",["./../configuration","exports"],function(t,e){"use strict";var i=t["default"],o=!1;e["default"]=n.Mixin.create({activate:function(){o=!0,this._super()},beforeModel:function(t){if(this._super(t),!this.get("_authEventListenersAssigned")){this.set("_authEventListenersAssigned",!0);var e=this;n.A(["sessionAuthenticationSucceeded","sessionAuthenticationFailed","sessionInvalidationSucceeded","sessionInvalidationFailed","authorizationFailed"]).forEach(function(n){e.get(i.sessionPropertyName).on(n,function(){Array.prototype.unshift.call(arguments,n);var i=o?e:t;i.send.apply(i,arguments)})})}},actions:{authenticateSession:function(){this.transitionTo(i.authenticationRoute)},sessionAuthenticationSucceeded:function(){var t=this.get(i.sessionPropertyName).get("attemptedTransition");t?(t.retry(),this.get(i.sessionPropertyName).set("attemptedTransition",null)):this.transitionTo(i.routeAfterAuthentication)},sessionAuthenticationFailed:function(){},invalidateSession:function(){this.get(i.sessionPropertyName).invalidate()},sessionInvalidationSucceeded:function(){n.testing||window.location.replace(i.applicationRootUrl)},sessionInvalidationFailed:function(){},authorizationFailed:function(){this.get(i.sessionPropertyName).get("isAuthenticated")&&this.get(i.sessionPropertyName).invalidate()}}})}),e("simple-auth/mixins/authenticated-route-mixin",["./../configuration","exports"],function(t,e){"use strict";var i=t["default"];e["default"]=n.Mixin.create({beforeModel:function(t){this._super(t),this.get(i.sessionPropertyName).get("isAuthenticated")||(t.abort(),this.get(i.sessionPropertyName).set("attemptedTransition",t),n.assert("The route configured as Configuration.authenticationRoute cannot implement the AuthenticatedRouteMixin mixin as that leads to an infinite transitioning loop.",this.get("routeName")!==i.authenticationRoute),t.send("authenticateSession"))}})}),e("simple-auth/mixins/authentication-controller-mixin",["./../configuration","exports"],function(t,e){"use strict";var i=t["default"];e["default"]=n.Mixin.create({authenticator:null,actions:{authenticate:function(t){var e=this.get("authenticator");return n.assert("AuthenticationControllerMixin/LoginControllerMixin require the authenticator property to be set on the controller",!n.isEmpty(e)),this.get(i.sessionPropertyName).authenticate(e,t)}}})}),e("simple-auth/mixins/login-controller-mixin",["./../configuration","./authentication-controller-mixin","exports"],function(t,e,i){"use strict";var o=(t["default"],e["default"]);i["default"]=n.Mixin.create(o,{actions:{authenticate:function(){var t=this.getProperties("identification","password");return this.set("password",null),this._super(t)}}})}),e("simple-auth/mixins/unauthenticated-route-mixin",["./../configuration","exports"],function(t,e){"use strict";var i=t["default"];e["default"]=n.Mixin.create({beforeModel:function(t){this.get(i.sessionPropertyName).get("isAuthenticated")&&(t.abort(),n.assert("The route configured as Configuration.routeIfAlreadyAuthenticated cannot implement the UnauthenticatedRouteMixin mixin as that leads to an infinite transitioning loop.",this.get("routeName")!==i.routeIfAlreadyAuthenticated),this.transitionTo(i.routeIfAlreadyAuthenticated))}})}),e("simple-auth/session",["exports"],function(t){"use strict";t["default"]=n.ObjectProxy.extend(n.Evented,{authenticator:null,store:null,container:null,isAuthenticated:!1,attemptedTransition:null,content:{},authenticate:function(){var t=Array.prototype.slice.call(arguments),e=t.shift();n.assert("Session#authenticate requires the authenticator factory to be specified, was "+e,!n.isEmpty(e));var i=this,o=this.container.lookup(e);return n.assert('No authenticator for factory "'+e+'" could be found',!n.isNone(o)),new n.RSVP.Promise(function(n,s){o.authenticate.apply(o,t).then(function(t){i.setup(e,t,!0),n()},function(t){i.clear(),i.trigger("sessionAuthenticationFailed",t),s(t)})})},invalidate:function(){n.assert("Session#invalidate requires the session to be authenticated",this.get("isAuthenticated"));var t=this;return new n.RSVP.Promise(function(e,i){var n=t.container.lookup(t.authenticator);n.invalidate(t.content).then(function(){n.off("sessionDataUpdated"),t.clear(!0),e()},function(e){t.trigger("sessionInvalidationFailed",e),i(e)})})},restore:function(){var t=this;return new n.RSVP.Promise(function(e,i){var n=t.store.restore(),o=n.authenticator;o?(delete n.authenticator,t.container.lookup(o).restore(n).then(function(i){t.setup(o,i),e()},function(){t.store.clear(),i()})):(t.store.clear(),i())})},setup:function(t,e,i){e=n.merge(n.merge({},this.content),e),i=!!i&&!this.get("isAuthenticated"),this.beginPropertyChanges(),this.setProperties({isAuthenticated:!0,authenticator:t,content:e}),this.bindToAuthenticatorEvents(),this.updateStore(),this.endPropertyChanges(),i&&this.trigger("sessionAuthenticationSucceeded")},clear:function(t){t=!!t&&this.get("isAuthenticated"),this.beginPropertyChanges(),this.setProperties({isAuthenticated:!1,authenticator:null,content:{}}),this.store.clear(),this.endPropertyChanges(),t&&this.trigger("sessionInvalidationSucceeded")},setUnknownProperty:function(t,e){var i=this._super(t,e);return this.updateStore(),i},updateStore:function(){var t=this.content;n.isEmpty(this.authenticator)||(t=n.merge({authenticator:this.authenticator},t)),n.isEmpty(t)||this.store.persist(t)},bindToAuthenticatorEvents:function(){var t=this,e=this.container.lookup(this.authenticator);e.off("sessionDataUpdated"),e.off("sessionDataInvalidated"),e.on("sessionDataUpdated",function(e){t.setup(t.authenticator,e)}),e.on("sessionDataInvalidated",function(){t.clear(!0)})},bindToStoreEvents:function(){var t=this;this.store.on("sessionDataUpdated",function(e){var i=e.authenticator;i?(delete e.authenticator,t.container.lookup(i).restore(e).then(function(e){t.setup(i,e,!0)},function(){t.clear(!0)})):t.clear(!0)})}.observes("store")})}),e("simple-auth/setup",["./configuration","./session","./stores/local-storage","./stores/ephemeral","exports"],function(t,e,i,o,s){"use strict";function r(t){if("*"===t)return t;if("string"===n.typeOf(t)){var e=document.createElement("a");e.href=t,e.href=e.href,t=e}var i=t.port;return n.isEmpty(i)&&(i="http:"===t.protocol?"80":"https:"===t.protocol?"443":""),t.protocol+"//"+t.hostname+(""!==i?":"+i:"")}function a(t){if(t.crossDomain===!1||h.indexOf("*")>-1)return!0;var e=g[t.url]=g[t.url]||r(t.url);return h.indexOf(e)>-1}function u(t){t.register("simple-auth-session-store:local-storage",p),t.register("simple-auth-session-store:ephemeral",m),t.register("simple-auth-session:main",d)}function c(t,e,i){a(t)&&(i.__simple_auth_authorized__=!0,c.authorizer.authorize(i,t))}function l(t,e){e.__simple_auth_authorized__&&401===e.status&&l.session.trigger("authorizationFailed")}var h,f=t["default"],d=e["default"],p=i["default"],m=o["default"],g={},v=!1;s["default"]=function(t,e){e.deferReadiness(),u(t);var i=t.lookup(f.store),o=t.lookup(f.session);if(o.setProperties({store:i,container:t}),n.A(["controller","route","component"]).forEach(function(e){t.injection(e,f.sessionPropertyName,f.session)}),h=n.A(f.crossOriginWhitelist).map(function(t){return r(t)}),n.isEmpty(f.authorizer))n.Logger.info("No authorizer was configured for Ember Simple Auth - specify one if backend requests need to be authorized.");else{var s=t.lookup(f.authorizer);n.assert('The configured authorizer "'+f.authorizer+'" could not be found in the container.',!n.isEmpty(s)),s.set("session",o),c.authorizer=s,l.session=o,v||(n.$.ajaxPrefilter("+*",c),n.$(document).ajaxError(l),v=!0)}var a=function(){e.advanceReadiness()};o.restore().then(a,a)}}),e("simple-auth/stores/base",["../utils/objects-are-equal","exports"],function(t,e){"use strict";t["default"];e["default"]=n.Object.extend(n.Evented,{persist:function(){},restore:function(){return{}},clear:function(){}})}),e("simple-auth/stores/ephemeral",["./base","exports"],function(t,e){"use strict";var i=t["default"];e["default"]=i.extend({init:function(){this.clear()},persist:function(t){this._data=JSON.stringify(t||{})},restore:function(){return JSON.parse(this._data)||{}},clear:function(){delete this._data,this._data="{}"}})}),e("simple-auth/stores/local-storage",["./base","../utils/objects-are-equal","../configuration","exports"],function(t,e,i,o){"use strict";var s=t["default"],r=e["default"],a=i["default"];o["default"]=s.extend({key:"ember_simple_auth:session",init:function(){this.key=a.localStorageKey,this.bindToStorageEvents()},persist:function(t){t=JSON.stringify(t||{}),localStorage.setItem(this.key,t),this._lastData=this.restore()},restore:function(){var t=localStorage.getItem(this.key);return JSON.parse(t)||{}},clear:function(){localStorage.removeItem(this.key),this._lastData={}},bindToStorageEvents:function(){var t=this;n.$(window).bind("storage",function(){var e=t.restore();r(e,t._lastData)||(t._lastData=e,t.trigger("sessionDataUpdated",e))})}})}),e("simple-auth/utils/get-global-config",["exports"],function(t){"use strict";var e="undefined"!=typeof window?window:{};t["default"]=function(t){return n.get(e,"ENV."+t)||{}}}),e("simple-auth/utils/load-config",["exports"],function(t){"use strict";t["default"]=function(t,e){return function(i,o){var s=n.Object.create(o);for(var r in this)this.hasOwnProperty(r)&&"function"!==n.typeOf(this[r])&&(this[r]=s.getWithDefault(r,t[r]));e&&e.apply(this,[i,o])}}}),e("simple-auth/utils/objects-are-equal",["exports"],function(t){"use strict";function e(t,i){if(t===i)return!0;if(!(t instanceof Object&&i instanceof Object))return!1;if(t.constructor!==i.constructor)return!1;for(var o in t)if(t.hasOwnProperty(o)){if(!i.hasOwnProperty(o))return!1;if(t[o]!==i[o]){if("object"!==n.typeOf(t[o]))return!1;if(!e(t[o],i[o]))return!1}}for(o in i)if(i.hasOwnProperty(o)&&!t.hasOwnProperty(o))return!1;return!0}t["default"]=e})}(this);