!function(t){Ember.libraries.register("Ember Simple Auth","0.7.2");var e,i;!function(){var t={},n={};e=function(e,i,n){t[e]={deps:i,callback:n}},i=function(e){function o(t){if("."!==t.charAt(0))return t;for(var i=t.split("/"),n=e.split("/").slice(0,-1),o=0,r=i.length;r>o;o++){var a=i[o];if(".."===a)n.pop();else{if("."===a)continue;n.push(a)}}return n.join("/")}if(n.hasOwnProperty(e))return n[e];if(n[e]={},!t[e])throw new Error("Could not find module "+e);for(var r,a=t[e],s=a.deps,u=a.callback,c=[],l=0,h=s.length;h>l;l++)c.push("exports"===s[l]?r={}:i(o(s[l])));var f=u.apply(this,c);return n[e]=r||f},i.registry=t}(),e("simple-auth/authenticators/base",["exports"],function(t){"use strict";t["default"]=Ember.Object.extend(Ember.Evented,{restore:function(){return new Ember.RSVP.reject},authenticate:function(){return new Ember.RSVP.reject},invalidate:function(){return new Ember.RSVP.resolve}})}),e("simple-auth/authorizers/base",["exports"],function(t){"use strict";t["default"]=Ember.Object.extend({session:null,authorize:function(){}})}),e("simple-auth/configuration",["simple-auth/utils/load-config","exports"],function(t,e){"use strict";var i=t["default"],n={authenticationRoute:"login",routeAfterAuthentication:"index",routeIfAlreadyAuthenticated:"index",sessionPropertyName:"session",authorizer:null,session:"simple-auth-session:main",store:"simple-auth-session-store:local-storage",localStorageKey:"ember_simple_auth:session",crossOriginWhitelist:[],applicationRootUrl:null};e["default"]={authenticationRoute:n.authenticationRoute,routeAfterAuthentication:n.routeAfterAuthentication,routeIfAlreadyAuthenticated:n.routeIfAlreadyAuthenticated,sessionPropertyName:n.sessionPropertyName,authorizer:n.authorizer,session:n.session,store:n.store,localStorageKey:n.localStorageKey,crossOriginWhitelist:n.crossOriginWhitelist,applicationRootUrl:n.applicationRootUrl,load:i(n,function(t){this.applicationRootUrl=t.lookup("router:main").get("rootURL")||"/"})}}),e("simple-auth/ember",["./initializer"],function(t){"use strict";var e=t["default"];Ember.onLoad("Ember.Application",function(t){t.initializer(e)})}),e("simple-auth/initializer",["./configuration","./utils/get-global-config","./setup","exports"],function(t,e,i,n){"use strict";var o=t["default"],r=e["default"],a=i["default"];n["default"]={name:"simple-auth",initialize:function(t,e){var i=r("simple-auth");o.load(t,i),a(t,e)}}}),e("simple-auth/mixins/application-route-mixin",["./../configuration","exports"],function(t,e){"use strict";var i=t["default"],n=!1;e["default"]=Ember.Mixin.create({activate:function(){n=!0,this._super()},beforeModel:function(t){if(this._super(t),!this.get("_authEventListenersAssigned")){this.set("_authEventListenersAssigned",!0);var e=this;Ember.A(["sessionAuthenticationSucceeded","sessionAuthenticationFailed","sessionInvalidationSucceeded","sessionInvalidationFailed","authorizationFailed"]).forEach(function(o){e.get(i.sessionPropertyName).on(o,function(){Array.prototype.unshift.call(arguments,o);var i=n?e:t;i.send.apply(i,arguments)})})}},actions:{authenticateSession:function(){this.transitionTo(i.authenticationRoute)},sessionAuthenticationSucceeded:function(){var t=this.get(i.sessionPropertyName).get("attemptedTransition");t?(t.retry(),this.get(i.sessionPropertyName).set("attemptedTransition",null)):this.transitionTo(i.routeAfterAuthentication)},sessionAuthenticationFailed:function(){},invalidateSession:function(){this.get(i.sessionPropertyName).invalidate()},sessionInvalidationSucceeded:function(){Ember.testing||window.location.replace(i.applicationRootUrl)},sessionInvalidationFailed:function(){},authorizationFailed:function(){this.get(i.sessionPropertyName).get("isAuthenticated")&&this.get(i.sessionPropertyName).invalidate()}}})}),e("simple-auth/mixins/authenticated-route-mixin",["./../configuration","exports"],function(t,e){"use strict";var i=t["default"];e["default"]=Ember.Mixin.create({beforeModel:function(t){this._super(t),this.get(i.sessionPropertyName).get("isAuthenticated")||(t.abort(),this.get(i.sessionPropertyName).set("attemptedTransition",t),Ember.assert("The route configured as Configuration.authenticationRoute cannot implement the AuthenticatedRouteMixin mixin as that leads to an infinite transitioning loop.",this.get("routeName")!==i.authenticationRoute),t.send("authenticateSession"))}})}),e("simple-auth/mixins/authentication-controller-mixin",["./../configuration","exports"],function(t,e){"use strict";var i=t["default"];e["default"]=Ember.Mixin.create({authenticator:null,actions:{authenticate:function(t){var e=this.get("authenticator");return Ember.assert("AuthenticationControllerMixin/LoginControllerMixin require the authenticator property to be set on the controller",!Ember.isEmpty(e)),this.get(i.sessionPropertyName).authenticate(e,t)}}})}),e("simple-auth/mixins/login-controller-mixin",["./../configuration","./authentication-controller-mixin","exports"],function(t,e,i){"use strict";var n=(t["default"],e["default"]);i["default"]=Ember.Mixin.create(n,{actions:{authenticate:function(){var t=this.getProperties("identification","password");return this.set("password",null),this._super(t)}}})}),e("simple-auth/mixins/unauthenticated-route-mixin",["./../configuration","exports"],function(t,e){"use strict";var i=t["default"];e["default"]=Ember.Mixin.create({beforeModel:function(t){this.get(i.sessionPropertyName).get("isAuthenticated")&&(t.abort(),Ember.assert("The route configured as Configuration.routeIfAlreadyAuthenticated cannot implement the UnauthenticatedRouteMixin mixin as that leads to an infinite transitioning loop.",this.get("routeName")!==i.routeIfAlreadyAuthenticated),this.transitionTo(i.routeIfAlreadyAuthenticated))}})}),e("simple-auth/session",["exports"],function(t){"use strict";t["default"]=Ember.ObjectProxy.extend(Ember.Evented,{authenticator:null,store:null,container:null,isAuthenticated:!1,attemptedTransition:null,content:{},authenticate:function(){var t=Array.prototype.slice.call(arguments),e=t.shift();Ember.assert("Session#authenticate requires the authenticator factory to be specified, was "+e,!Ember.isEmpty(e));var i=this,n=this.container.lookup(e);return Ember.assert('No authenticator for factory "'+e+'" could be found',!Ember.isNone(n)),new Ember.RSVP.Promise(function(o,r){n.authenticate.apply(n,t).then(function(t){i.setup(e,t,!0),o()},function(t){i.clear(),i.trigger("sessionAuthenticationFailed",t),r(t)})})},invalidate:function(){Ember.assert("Session#invalidate requires the session to be authenticated",this.get("isAuthenticated"));var t=this;return new Ember.RSVP.Promise(function(e,i){var n=t.container.lookup(t.authenticator);n.invalidate(t.content).then(function(){n.off("sessionDataUpdated"),t.clear(!0),e()},function(e){t.trigger("sessionInvalidationFailed",e),i(e)})})},restore:function(){var t=this;return new Ember.RSVP.Promise(function(e,i){var n=t.store.restore(),o=n.authenticator;o?(delete n.authenticator,t.container.lookup(o).restore(n).then(function(i){t.setup(o,i),e()},function(){t.store.clear(),i()})):(t.store.clear(),i())})},setup:function(t,e,i){e=Ember.merge(Ember.merge({},this.content),e),i=!!i&&!this.get("isAuthenticated"),this.beginPropertyChanges(),this.setProperties({isAuthenticated:!0,authenticator:t,content:e}),this.bindToAuthenticatorEvents(),this.updateStore(),this.endPropertyChanges(),i&&this.trigger("sessionAuthenticationSucceeded")},clear:function(t){t=!!t&&this.get("isAuthenticated"),this.beginPropertyChanges(),this.setProperties({isAuthenticated:!1,authenticator:null,content:{}}),this.store.clear(),this.endPropertyChanges(),t&&this.trigger("sessionInvalidationSucceeded")},setUnknownProperty:function(t,e){var i=this._super(t,e);return this.updateStore(),i},updateStore:function(){var t=this.content;Ember.isEmpty(this.authenticator)||(t=Ember.merge({authenticator:this.authenticator},t)),Ember.isEmpty(t)||this.store.persist(t)},bindToAuthenticatorEvents:function(){var t=this,e=this.container.lookup(this.authenticator);e.off("sessionDataUpdated"),e.off("sessionDataInvalidated"),e.on("sessionDataUpdated",function(e){t.setup(t.authenticator,e)}),e.on("sessionDataInvalidated",function(){t.clear(!0)})},bindToStoreEvents:function(){var t=this;this.store.on("sessionDataUpdated",function(e){var i=e.authenticator;i?(delete e.authenticator,t.container.lookup(i).restore(e).then(function(e){t.setup(i,e,!0)},function(){t.clear(!0)})):t.clear(!0)})}.observes("store")})}),e("simple-auth/setup",["./configuration","./session","./stores/local-storage","./stores/ephemeral","exports"],function(t,e,i,n,o){"use strict";function r(t){if("*"===t)return t;if("string"===Ember.typeOf(t)){var e=document.createElement("a");e.href=t,e.href=e.href,t=e}var i=t.port;return Ember.isEmpty(i)&&(i="http:"===t.protocol?"80":"https:"===t.protocol?"443":""),t.protocol+"//"+t.hostname+(""!==i?":"+i:"")}function a(t){if(t.crossDomain===!1||l.indexOf("*")>-1)return!0;var e=m[t.url]=m[t.url]||r(t.url);return l.indexOf(e)>-1}function s(t){t.register("simple-auth-session-store:local-storage",d),t.register("simple-auth-session-store:ephemeral",p),t.register("simple-auth-session:main",f)}function u(t,e,i){a(t)&&(i.__simple_auth_authorized__=!0,u.authorizer.authorize(i,t))}function c(t,e){e.__simple_auth_authorized__&&401===e.status&&c.session.trigger("authorizationFailed")}var l,h=t["default"],f=e["default"],d=i["default"],p=n["default"],m={},g=!1;o["default"]=function(t,e){e.deferReadiness(),s(t);var i=t.lookup(h.store),n=t.lookup(h.session);if(n.setProperties({store:i,container:t}),Ember.A(["controller","route","component"]).forEach(function(e){t.injection(e,h.sessionPropertyName,h.session)}),l=Ember.A(h.crossOriginWhitelist).map(function(t){return r(t)}),Ember.isEmpty(h.authorizer))Ember.Logger.info("No authorizer was configured for Ember Simple Auth - specify one if backend requests need to be authorized.");else{var o=t.lookup(h.authorizer);Ember.assert('The configured authorizer "'+h.authorizer+'" could not be found in the container.',!Ember.isEmpty(o)),o.set("session",n),u.authorizer=o,c.session=n,g||(Ember.$.ajaxPrefilter("+*",u),Ember.$(document).ajaxError(c),g=!0)}var a=function(){e.advanceReadiness()};n.restore().then(a,a)}}),e("simple-auth/stores/base",["../utils/objects-are-equal","exports"],function(t,e){"use strict";t["default"];e["default"]=Ember.Object.extend(Ember.Evented,{persist:function(){},restore:function(){return{}},clear:function(){}})}),e("simple-auth/stores/ephemeral",["./base","exports"],function(t,e){"use strict";var i=t["default"];e["default"]=i.extend({init:function(){this.clear()},persist:function(t){this._data=JSON.stringify(t||{})},restore:function(){return JSON.parse(this._data)||{}},clear:function(){delete this._data,this._data="{}"}})}),e("simple-auth/stores/local-storage",["./base","../utils/objects-are-equal","../configuration","exports"],function(t,e,i,n){"use strict";var o=t["default"],r=e["default"],a=i["default"];n["default"]=o.extend({key:"ember_simple_auth:session",init:function(){this.key=a.localStorageKey,this.bindToStorageEvents()},persist:function(t){t=JSON.stringify(t||{}),localStorage.setItem(this.key,t),this._lastData=this.restore()},restore:function(){var t=localStorage.getItem(this.key);return JSON.parse(t)||{}},clear:function(){localStorage.removeItem(this.key),this._lastData={}},bindToStorageEvents:function(){var t=this;Ember.$(window).bind("storage",function(){var e=t.restore();r(e,t._lastData)||(t._lastData=e,t.trigger("sessionDataUpdated",e))})}})}),e("simple-auth/utils/get-global-config",["exports"],function(t){"use strict";var e="undefined"!=typeof window?window:{};t["default"]=function(t){return Ember.get(e,"ENV."+t)||{}}}),e("simple-auth/utils/load-config",["exports"],function(t){"use strict";t["default"]=function(t,e){return function(i,n){var o=Ember.Object.create(n);for(var r in this)this.hasOwnProperty(r)&&"function"!==Ember.typeOf(this[r])&&(this[r]=o.getWithDefault(r,t[r]));e&&e.apply(this,[i,n])}}}),e("simple-auth/utils/objects-are-equal",["exports"],function(t){"use strict";function e(t,i){if(t===i)return!0;if(!(t instanceof Object&&i instanceof Object))return!1;if(t.constructor!==i.constructor)return!1;for(var n in t)if(t.hasOwnProperty(n)){if(!i.hasOwnProperty(n))return!1;if(t[n]!==i[n]){if("object"!==Ember.typeOf(t[n]))return!1;if(!e(t[n],i[n]))return!1}}for(n in i)if(i.hasOwnProperty(n)&&!t.hasOwnProperty(n))return!1;return!0}t["default"]=e});var n=(i("simple-auth/initializer")["default"],i("simple-auth/configuration")["default"]),o=i("simple-auth/session")["default"],r=i("simple-auth/authenticators/base")["default"],a=i("simple-auth/authorizers/base")["default"],s=i("simple-auth/stores/base")["default"],u=i("simple-auth/stores/local-storage")["default"],c=i("simple-auth/stores/ephemeral")["default"],l=i("simple-auth/utils/objects-are-equal")["default"],h=i("simple-auth/utils/get-global-config")["default"],f=i("simple-auth/utils/load-config")["default"],d=i("simple-auth/mixins/application-route-mixin")["default"],p=i("simple-auth/mixins/authenticated-route-mixin")["default"],m=i("simple-auth/mixins/authentication-controller-mixin")["default"],g=i("simple-auth/mixins/login-controller-mixin")["default"],b=i("simple-auth/mixins/unauthenticated-route-mixin")["default"];t.SimpleAuth={Configuration:n,Session:o,Authenticators:{Base:r},Authorizers:{Base:a},Stores:{Base:s,LocalStorage:u,Ephemeral:c},Utils:{objectsAreEqual:l,getGlobalConfig:h,loadConfig:f},ApplicationRouteMixin:d,AuthenticatedRouteMixin:p,AuthenticationControllerMixin:m,LoginControllerMixin:g,UnauthenticatedRouteMixin:b},i("simple-auth/ember")}("undefined"!=typeof global?global:window);