!function(t){var e,i;!function(){var t={},n={};e=function(e,i,n){t[e]={deps:i,callback:n}},i=function(e){function o(t){if("."!==t.charAt(0))return t;for(var i=t.split("/"),n=e.split("/").slice(0,-1),o=0,r=i.length;r>o;o++){var a=i[o];if(".."===a)n.pop();else{if("."===a)continue;n.push(a)}}return n.join("/")}if(n.hasOwnProperty(e))return n[e];if(n[e]={},!t[e])throw new Error("Could not find module "+e);for(var r,a=t[e],s=a.deps,u=a.callback,c=[],l=0,f=s.length;f>l;l++)c.push("exports"===s[l]?r={}:i(o(s[l])));var h=u.apply(this,c);return n[e]=r||h},i.registry=t}(),e("simple-auth/authenticators/base",["exports"],function(t){"use strict";var e="undefined"!=typeof window?window:{},i=e.Ember;t["default"]=i.Object.extend(i.Evented,{restore:function(){return new i.RSVP.reject},authenticate:function(){return new i.RSVP.reject},invalidate:function(){return new i.RSVP.resolve}})}),e("simple-auth/authorizers/base",["exports"],function(t){"use strict";var e="undefined"!=typeof window?window:{},i=e.Ember;t["default"]=i.Object.extend({session:null,authorize:function(){}})}),e("simple-auth/configuration",["./utils/get-global-config","exports"],function(t,e){"use strict";var i=t["default"];e["default"]={authenticationRoute:"login",routeAfterAuthentication:"index",sessionPropertyName:"session",authorizerFactory:null,storeFactory:"simple-auth-session-store:local-storage",crossOriginWhitelist:[],applicationRootUrl:null,load:function(t){var e=i("simple-auth");this.authenticationRoute=e.authenticationRoute||this.authenticationRoute,this.routeAfterAuthentication=e.routeAfterAuthentication||this.routeAfterAuthentication,this.sessionPropertyName=e.sessionPropertyName||this.sessionPropertyName,this.authorizerFactory=e.authorizerFactory||this.authorizerFactory,this.storeFactory=e.storeFactory||this.storeFactory,this.applicationRootUrl=t.lookup("router:main").get("rootURL")||"/"}}}),e("simple-auth/ember",["./initializer"],function(t){"use strict";var e="undefined"!=typeof window?window:{},i=e.Ember,n=t["default"];i.onLoad("Ember.Application",function(t){t.initializer(n)})}),e("simple-auth/initializer",["./setup","exports"],function(t,e){"use strict";var i="undefined"!=typeof window?window:{},n=(i.Ember,t["default"]);e["default"]={name:"simple-auth",initialize:function(t,e){n(t,e)}}}),e("simple-auth/mixins/application-route-mixin",["./../configuration","exports"],function(t,e){"use strict";var i="undefined"!=typeof window?window:{},n=i.Ember,o=t["default"];e["default"]=n.Mixin.create({beforeModel:function(t){var e=this;n.A(["sessionAuthenticationSucceeded","sessionAuthenticationFailed","sessionInvalidationSucceeded","sessionInvalidationFailed","authorizationFailed"]).forEach(function(i){e.get(o.sessionPropertyName).on(i,function(){Array.prototype.unshift.call(arguments,i);var n=t.isActive?t:e;n.send.apply(n,arguments)})})},actions:{authenticateSession:function(){this.transitionTo(o.authenticationRoute)},sessionAuthenticationSucceeded:function(){var t=this.get(o.sessionPropertyName).get("attemptedTransition");t?(t.retry(),this.get(o.sessionPropertyName).set("attemptedTransition",null)):this.transitionTo(o.routeAfterAuthentication)},sessionAuthenticationFailed:function(){},invalidateSession:function(){this.get(o.sessionPropertyName).invalidate()},sessionInvalidationSucceeded:function(){window.location.replace(o.applicationRootUrl)},sessionInvalidationFailed:function(){},authorizationFailed:function(){this.get(o.sessionPropertyName).get("isAuthenticated")&&this.get(o.sessionPropertyName).invalidate()}}})}),e("simple-auth/mixins/authenticated-route-mixin",["./../configuration","exports"],function(t,e){"use strict";var i="undefined"!=typeof window?window:{},n=i.Ember,o=t["default"];e["default"]=n.Mixin.create({beforeModel:function(t){this.get(o.sessionPropertyName).get("isAuthenticated")||(t.abort(),this.get(o.sessionPropertyName).set("attemptedTransition",t),t.send("authenticateSession"))}})}),e("simple-auth/mixins/authentication-controller-mixin",["./../configuration","exports"],function(t,e){"use strict";var i="undefined"!=typeof window?window:{},n=i.Ember,o=t["default"];e["default"]=n.Mixin.create({authenticatorFactory:null,actions:{authenticate:function(t){var e=this.get("authenticatorFactory");return n.assert("AuthenticationControllerMixin/LoginControllerMixin require the authenticatorFactory property to be set on the controller",!n.isEmpty(e)),this.get(o.sessionPropertyName).authenticate(this.get("authenticatorFactory"),t)}}})}),e("simple-auth/mixins/login-controller-mixin",["./../configuration","./authentication-controller-mixin","exports"],function(t,e,i){"use strict";var n="undefined"!=typeof window?window:{},o=n.Ember,r=(t["default"],e["default"]);i["default"]=o.Mixin.create(r,{actions:{authenticate:function(){var t=this.getProperties("identification","password");this.set("password",null),this._super(t)}}})}),e("simple-auth/session",["exports"],function(t){"use strict";var e="undefined"!=typeof window?window:{},i=e.Ember;t["default"]=i.ObjectProxy.extend(i.Evented,{authenticatorFactory:null,store:null,isAuthenticated:!1,attemptedTransition:null,content:{},init:function(){this.bindToStoreEvents()},authenticate:function(t,e){i.assert("Session#authenticate requires the authenticator factory to be specified, was "+t,!i.isEmpty(t));var n=this;return new i.RSVP.Promise(function(i,o){n.container.lookup(t).authenticate(e).then(function(e){n.setup(t,e,!0),i()},function(t){n.clear(),n.trigger("sessionAuthenticationFailed",t),o(t)})})},invalidate:function(){var t=this;return new i.RSVP.Promise(function(e,i){var n=t.container.lookup(t.authenticatorFactory);n.invalidate(t.content).then(function(){n.off("sessionDataUpdated"),t.clear(!0),e()},function(e){t.trigger("sessionInvalidationFailed",e),i(e)})})},restore:function(){var t=this;return new i.RSVP.Promise(function(e,i){var n=t.store.restore(),o=n.authenticatorFactory;o?(delete n.authenticatorFactory,t.container.lookup(o).restore(n).then(function(i){t.setup(o,i),e()},function(){t.store.clear(),i()})):(t.store.clear(),i())})},setup:function(t,e,n){n=!!n&&!this.get("isAuthenticated"),this.beginPropertyChanges(),this.setProperties({isAuthenticated:!0,authenticatorFactory:t,content:e}),this.bindToAuthenticatorEvents();var o=i.$.extend({authenticatorFactory:t},this.content);this.store.replace(o),this.endPropertyChanges(),n&&this.trigger("sessionAuthenticationSucceeded")},clear:function(t){t=!!t&&this.get("isAuthenticated"),this.beginPropertyChanges(),this.setProperties({isAuthenticated:!1,authenticatorFactory:null,content:{}}),this.store.clear(),this.endPropertyChanges(),t&&this.trigger("sessionInvalidationSucceeded")},bindToAuthenticatorEvents:function(){var t=this,e=this.container.lookup(this.authenticatorFactory);e.off("sessionDataUpdated"),e.off("sessionDataInvalidated"),e.on("sessionDataUpdated",function(e){t.setup(t.authenticatorFactory,e)}),e.on("sessionDataInvalidated",function(){t.clear(!0)})},bindToStoreEvents:function(){var t=this;this.store.on("sessionDataUpdated",function(e){var i=e.authenticatorFactory;i?(delete e.authenticatorFactory,t.container.lookup(i).restore(e).then(function(e){t.setup(i,e,!0)},function(){t.clear(!0)})):t.clear(!0)})}})}),e("simple-auth/setup",["./configuration","./session","./stores/local-storage","./stores/ephemeral","exports"],function(t,e,i,n,o){"use strict";function r(t){if("string"===Ember.typeOf(t)){var e=document.createElement("a");e.href=t,e.href=e.href,t=e}var i=t.port;return Ember.isEmpty(i)&&(i="http:"===t.protocol?"80":"https:"===t.protocol?"443":""),t.protocol+"//"+t.hostname+(""!==i?":"+i:"")}function a(t){if(t.crossDomain===!1)return!0;var e=d[t.url]=d[t.url]||r(t.url);return u.indexOf(e)>-1}function s(t){t.register("simple-auth-session-store:local-storage",f),t.register("simple-auth-session-store:ephemeral",h)}var u,c=t["default"],l=e["default"],f=i["default"],h=n["default"],d={};o["default"]=function(t,e){c.load(t),e.deferReadiness(),s(t);var i=t.lookup(c.storeFactory),n=l.create({store:i,container:t});if(u=Ember.A(c.crossOriginWhitelist).map(function(t){return r(t)}),t.register("simple-auth-session:main",n,{instantiate:!1}),Ember.A(["controller","route"]).forEach(function(e){t.injection(e,c.sessionPropertyName,"simple-auth-session:main")}),Ember.isEmpty(c.authorizerFactory))Ember.Logger.debug("No authorizer factory was configured for Ember Simple Auth - specify one if backend requests need to be authorized.");else{var o=t.lookup(c.authorizerFactory);o&&(o.set("session",n),Ember.$.ajaxPrefilter(function(t,e,i){!o.isDestroyed&&a(t)&&o.authorize(i,t)}),Ember.$(document).ajaxError(function(t,e){401===e.status&&n.trigger("authorizationFailed")}))}var f=function(){e.advanceReadiness()};n.restore().then(f,f)}}),e("simple-auth/stores/base",["../utils/flat-objects-are-equal","exports"],function(t,e){"use strict";var i="undefined"!=typeof window?window:{},n=i.Ember,o=t["default"];e["default"]=n.Object.extend(n.Evented,{persist:function(){},restore:function(){return{}},replace:function(t){o(t,this.restore())||(this.clear(),this.persist(t))},clear:function(){}})}),e("simple-auth/stores/ephemeral",["./base","exports"],function(t,e){"use strict";var i="undefined"!=typeof window?window:{},n=i.Ember,o=t["default"];e["default"]=o.extend({init:function(){this.clear()},persist:function(t){this._data=n.$.extend(t,this._data)},restore:function(){return n.$.extend({},this._data)},clear:function(){delete this._data,this._data={}}})}),e("simple-auth/stores/local-storage",["./base","../utils/flat-objects-are-equal","exports"],function(t,e,i){"use strict";var n="undefined"!=typeof window?window:{},o=n.Ember,r=t["default"],a=e["default"];i["default"]=r.extend({keyPrefix:"ember_simple_auth:",_triggerChangeEventTimeout:null,init:function(){this.bindToStorageEvents()},persist:function(t){for(var e in t){var i=this.buildStorageKey(e);localStorage.setItem(i,t[e])}this._lastData=this.restore()},restore:function(){var t=this,e={};return this.knownKeys().forEach(function(i){var n=i.replace(t.keyPrefix,"");e[n]=localStorage.getItem(i)}),e},clear:function(){this.knownKeys().forEach(function(t){localStorage.removeItem(t)}),this._lastData=null},buildStorageKey:function(t){return this.keyPrefix+t},knownKeys:function(){for(var t=o.A([]),e=0,i=localStorage.length;i>e;e++){var n=localStorage.key(e);0===n.indexOf(this.keyPrefix)&&t.push(n)}return t},bindToStorageEvents:function(){var t=this;o.$(window).bind("storage",function(){var e=t.restore();a(e,t._lastData)||(t._lastData=e,o.run.cancel(t._triggerChangeEventTimeout),t._triggerChangeEventTimeout=o.run.next(t,function(){this.trigger("sessionDataUpdated",e)}))})}})}),e("simple-auth/utils/flat-objects-are-equal",["exports"],function(t){"use strict";t["default"]=function(t,e){function i(t){var e=[];for(var i in t)e.push([i,t[i]]);return e.sort(function(t,e){return t[0]<e[0]?-1:t[0]>e[0]?1:0})}return JSON.stringify(i(t))===JSON.stringify(i(e))}}),e("simple-auth/utils/get-global-config",["exports"],function(t){"use strict";var e="undefined"!=typeof window?window:{};t["default"]=function(t){return(e.ENV||{})[t]||{}}}),e("simple-auth/utils/is-secure-url",["exports"],function(t){"use strict";t["default"]=function(t){var e=document.createElement("a");return e.href=t,e.href=e.href,"https:"==e.protocol}});var n=(i("simple-auth/initializer").default,i("simple-auth/setup").default),o=i("simple-auth/configuration").default,r=i("simple-auth/session").default,a=i("simple-auth/authenticators/base").default,s=i("simple-auth/authorizers/base").default,u=i("simple-auth/stores/base").default,c=i("simple-auth/stores/local-storage").default,l=i("simple-auth/stores/ephemeral").default,f=i("simple-auth/utils/flat-objects-are-equal").default,h=i("simple-auth/utils/is-secure-url").default,d=i("simple-auth/utils/get-global-config").default,p=i("simple-auth/mixins/application-route-mixin").default,m=i("simple-auth/mixins/authenticated-route-mixin").default,g=i("simple-auth/mixins/authentication-controller-mixin").default,y=i("simple-auth/mixins/login-controller-mixin").default;t.SimpleAuth={setup:n,Configuration:o,Session:r,Authenticators:{Base:a},Authorizers:{Base:s},Stores:{Base:u,LocalStorage:c,Ephemeral:l},Utils:{flatObjectsAreEqual:f,isSecureUrl:h,getGlobalConfig:d},ApplicationRouteMixin:p,AuthenticatedRouteMixin:m,AuthenticationControllerMixin:g,LoginControllerMixin:y},i("simple-auth/ember")}("undefined"!=typeof global?global:window);